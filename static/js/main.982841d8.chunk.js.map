{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","console","log","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","text","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IA6BaE,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBH,EAASM,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAhCkB,SACxBA,EADwB,GAEpB,IADeF,EAChB,EADgBA,SAAUH,EAC1B,EAD0BA,WAGvBM,EAAY,YAAOD,GAsBzB,OAlBAE,QAAQC,IAAIL,EAAUH,GAEtBM,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAIR,IAAaP,EAASgB,SACjBF,EAAMG,cAAcF,GAGzBR,IAAaP,EAASkB,OACjBJ,EAAMK,OAASJ,EAAMI,OAGvB,KAGLf,GACFM,EAAaU,UAGRV,EAMOW,CAAkB,GAAD,OACzBpB,GAAkB,CAAEM,WAAUH,eAG9BS,EAAO,SAACS,GACZd,EAAYc,IAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SAELD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaP,EAASgB,WAEpCU,QAAS,kBAAMb,EAAKb,EAASgB,WAN/B,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAaP,EAASkB,SAEpCQ,QAAS,kBAAMb,EAAKb,EAASkB,SAL/B,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfrB,IAEdsB,QAtCQ,WACdrB,GAAeD,IAgCX,sBASEG,IAAaP,EAASM,MAAQF,IAE9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA3CJJ,EA2CgBtB,EAASM,KA1CtCE,EAAYc,QACZjB,GAAc,GAFF,IAACiB,GAwCP,sBAUJ,6BACE,6BACGb,EAAMkB,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC3HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.982841d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getReorderedGoods = (\n  goods: string[], { sortType, isReversed }: ReorderOptions,\n) => {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((good1, good2) => {\n    if (sortType === SortType.ALPHABET) {\n      return good1.localeCompare(good2);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return good1.length - good2.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const goods = getReorderedGoods(\n    [...goodsFromServer], { sortType, isReversed },\n  );\n\n  const sort = (text: SortType) => {\n    setSortType(text);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = (text: SortType) => {\n    setSortType(text);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          // className=\"button is-info is-light\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => sort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => sort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed !== true,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE || isReversed)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset(SortType.NONE)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}